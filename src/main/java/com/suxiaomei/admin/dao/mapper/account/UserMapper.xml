<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suxiaomei.admin.dao.account.UserMapper">
  <resultMap id="BaseResultMap" type="com.suxiaomei.admin.entity.account.User">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, roleid, name, username, password, mobile, remark, createtime, updatetime, 
    status
  </sql>
  <sql id="Base_Column_List2">
    u.userid, u.roleid, u.name, u.username, u.mobile, u.remark, u.createtime, u.updatetime, 
    u.status,'******' password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.suxiaomei.admin.entity.account.User">
    insert into user (userid, roleid, name, 
      username, password, mobile, 
      remark)
    values (#{userid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.suxiaomei.admin.entity.account.User">
    update user
    set roleid = #{roleid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  
  
  
  
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR} and status = 1
    limit 0,1
  </select>
  <insert id="insertSelective" parameterType="user">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        roleid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="findByIsocId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List2" />
    from user u
    left join role r on (r.roleid = u.roleid and r.type = 5)
    left join isoc i on r.relationid = i.isocid
    where i.isocid = #{isocid,jdbcType=INTEGER} and r.ismanager = 1
    limit 0,1
  </select>
  <select id="findByBusinessid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List2" />
    from user u
    left join role r on (r.roleid = u.roleid and r.type = 3)
    where r.relationid = #{businessid,jdbcType=INTEGER} and r.ismanager = 1
    limit 0,1
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="user">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateStatusByRoleidAndType">
    update user set status = #{status,jdbcType=TINYINT}
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
</mapper>