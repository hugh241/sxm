<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suxiaomei.admin.dao.employee.EmployeeTaskMapper">
  <resultMap id="BaseResultMap" type="com.suxiaomei.admin.entity.employee.EmployeeTask">
    <id column="employeetaskid" jdbcType="INTEGER" property="employeetaskid" />
    <result column="employeeid" jdbcType="INTEGER" property="employeeid" />
    <result column="customerid" jdbcType="INTEGER" property="customerid" />
    <result column="contractorderid" jdbcType="INTEGER" property="contractorderid" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="ordertype" jdbcType="TINYINT" property="ordertype" />
    <result column="confirmstatus" jdbcType="TINYINT" property="confirmstatus" />
    <result column="confirmtime" jdbcType="TIMESTAMP" property="confirmtime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    employeetaskid, employeeid, customerid, contractorderid, type, ordertype, confirmstatus, 
    confirmtime, createtime, updatetime, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_task
    where employeetaskid = #{employeetaskid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee_task
    where employeetaskid = #{employeetaskid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.suxiaomei.admin.entity.employee.EmployeeTask">
    insert into employee_task (employeetaskid, employeeid, customerid, 
      contractorderid, type, ordertype, 
      confirmstatus, confirmtime, createtime, 
      updatetime, status)
    values (#{employeetaskid,jdbcType=INTEGER}, #{employeeid,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, 
      #{contractorderid,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{ordertype,jdbcType=TINYINT}, 
      #{confirmstatus,jdbcType=TINYINT}, #{confirmtime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.suxiaomei.admin.entity.employee.EmployeeTask">
    insert into employee_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeetaskid != null">
        employeetaskid,
      </if>
      <if test="employeeid != null">
        employeeid,
      </if>
      <if test="customerid != null">
        customerid,
      </if>
      <if test="contractorderid != null">
        contractorderid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ordertype != null">
        ordertype,
      </if>
      <if test="confirmstatus != null">
        confirmstatus,
      </if>
      <if test="confirmtime != null">
        confirmtime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeetaskid != null">
        #{employeetaskid,jdbcType=INTEGER},
      </if>
      <if test="employeeid != null">
        #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="contractorderid != null">
        #{contractorderid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="ordertype != null">
        #{ordertype,jdbcType=TINYINT},
      </if>
      <if test="confirmstatus != null">
        #{confirmstatus,jdbcType=TINYINT},
      </if>
      <if test="confirmtime != null">
        #{confirmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suxiaomei.admin.entity.employee.EmployeeTask">
    update employee_task
    <set>
      <if test="employeeid != null">
        employeeid = #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null">
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="contractorderid != null">
        contractorderid = #{contractorderid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="ordertype != null">
        ordertype = #{ordertype,jdbcType=TINYINT},
      </if>
      <if test="confirmstatus != null">
        confirmstatus = #{confirmstatus,jdbcType=TINYINT},
      </if>
      <if test="confirmtime != null">
        confirmtime = #{confirmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where employeetaskid = #{employeetaskid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suxiaomei.admin.entity.employee.EmployeeTask">
    update employee_task
    set employeeid = #{employeeid,jdbcType=INTEGER},
      customerid = #{customerid,jdbcType=INTEGER},
      contractorderid = #{contractorderid,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      ordertype = #{ordertype,jdbcType=TINYINT},
      confirmstatus = #{confirmstatus,jdbcType=TINYINT},
      confirmtime = #{confirmtime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where employeetaskid = #{employeetaskid,jdbcType=INTEGER}
  </update>
</mapper>