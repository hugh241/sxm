<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suxiaomei.admin.dao.isoc.IsocBusinessOrderMapper">
  <resultMap id="BaseResultMap" type="isocBusinessOrder">
    <id column="isocbusinessorderid" jdbcType="INTEGER" property="isocbusinessorderid" />
    <result column="isocid" jdbcType="INTEGER" property="isocid" />
    <result column="businessid" jdbcType="INTEGER" property="businessid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="begindate" jdbcType="DATE" property="begindate" />
    <result column="enddate" jdbcType="DATE" property="enddate" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="auditstatus" jdbcType="TINYINT" property="auditstatus" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <resultMap id="ExtendResultMap" type="isocBusinessOrderExtend" extends="BaseResultMap">
    <result column="isocname" jdbcType="VARCHAR" property="isocname" />
    <result column="membername" jdbcType="VARCHAR" property="membername" />
    <collection property="datas" ofType="IsocBusinessOrderData" select="com.suxiaomei.admin.dao.isoc.IsocBusinessOrderDataMapper.findByRelationidAndType" column="{relationid=isocbusinessorderid,type=0}"></collection>
  </resultMap>
  <sql id="Base_Column_List">
    isocbusinessorderid, isocid,type, businessid, level, begindate, enddate, result, auditstatus, 
    createtime, updatetime, status
  </sql>
  <sql id="Extend_Column_List">
    ibo.isocbusinessorderid, ibo.isocid,ibo.type, ibo.businessid, ibo.level, ibo.begindate, ibo.enddate, ibo.result, ibo.auditstatus, 
    ibo.createtime, ibo.updatetime, ibo.status,i.name isocname,m.name membername
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from isoc_business_order
    where isocbusinessorderid = #{isocbusinessorderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from isoc_business_order
    where isocbusinessorderid = #{isocbusinessorderid,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.suxiaomei.admin.entity.isoc.IsocBusinessOrder">
    insert into isoc_business_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isocbusinessorderid != null">
        isocbusinessorderid,
      </if>
      <if test="isocid != null">
        isocid,
      </if>
      <if test="businessid != null">
        businessid,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="begindate != null">
        begindate,
      </if>
      <if test="enddate != null">
        enddate,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="auditstatus != null">
        auditstatus,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isocbusinessorderid != null">
        #{isocbusinessorderid,jdbcType=INTEGER},
      </if>
      <if test="isocid != null">
        #{isocid,jdbcType=INTEGER},
      </if>
      <if test="businessid != null">
        #{businessid,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="auditstatus != null">
        #{auditstatus,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suxiaomei.admin.entity.isoc.IsocBusinessOrder">
    update isoc_business_order
    <set>
      <if test="isocid != null">
        isocid = #{isocid,jdbcType=INTEGER},
      </if>
      <if test="businessid != null">
        businessid = #{businessid,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        begindate = #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        enddate = #{enddate,jdbcType=DATE},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="auditstatus != null">
        auditstatus = #{auditstatus,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where isocbusinessorderid = #{isocbusinessorderid,jdbcType=INTEGER}
  </update>
  
  
  <select id="findByPageList" resultMap="ExtendResultMap">
	select <include refid="Extend_Column_List" />,0
	from isoc_business_order ibo
	left join isoc_member im on (im.isocid = ibo.isocid and im.businessid = ibo.businessid)
	left join isoc i on i.isocid = ibo.isocid
	left join member m on m.memberid = im.memberid
	<where>
		<if test="order.isocid!=null">
			and i.isocid = #{order.isocid,jdbcType=INTEGER}
		</if>
		<if test="order.businessid!=null">
			and ibo.businessid = #{order.businessid,jdbcType=INTEGER}
		</if>
		<if test="order.membername != null and order.membername != ''">
			and m.name like concat('%', #{order.membername}, '%')
		</if>
		<if test="order.auditstatus!=null">
			and ibo.auditstatus = #{order.auditstatus,jdbcType=INTEGER}
		</if>
		<if test="order.type!=null">
			and ibo.type = #{order.type,jdbcType=INTEGER}
		</if>
	</where>
	order by ibo.auditstatus asc,ibo.createtime desc
	limit #{pageNo},#{pageSize}
  </select>
  <select id="findCountByCondition" resultType="Integer">
	select count(*) from isoc_business_order ibo
	left join isoc_member im on (im.isocid = ibo.isocid and im.businessid = ibo.businessid)
	left join isoc i on i.isocid = ibo.isocid
	left join member m on m.memberid = im.memberid
	<where>
		<if test="order.isocid!=null">
			and i.isocid = #{order.isocid,jdbcType=INTEGER}
		</if>
		<if test="order.businessid!=null">
			and ibo.businessid = #{order.businessid,jdbcType=INTEGER}
		</if>
		<if test="order.membername != null and order.membername != ''">
			and m.name like concat('%', #{order.membername}, '%')
		</if>
		<if test="order.auditstatus!=null">
			and ibo.auditstatus = #{order.auditstatus,jdbcType=INTEGER}
		</if>
		<if test="order.type!=null">
			and ibo.type = #{order.type,jdbcType=INTEGER}
		</if>
	</where>
  </select>
  <update id="updateByPrimaryKey" parameterType="isocBusinessOrder">
    update isoc_business_order
    set level = #{level,jdbcType=VARCHAR},
      begindate = #{begindate,jdbcType=DATE},
      enddate = #{enddate,jdbcType=DATE},
      result = #{result,jdbcType=VARCHAR},
      auditstatus = #{auditstatus,jdbcType=TINYINT}
    where isocbusinessorderid = #{isocbusinessorderid,jdbcType=INTEGER}
  </update>
  <select id="findByIsocbusinessorderdataid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select ibo.* from isoc_business_order ibo
    left join isoc_business_order_data ibod on (ibod.relationid = ibo.isocbusinessorderid and ibod.type = 0)
    where ibod.isocbusinessorderdataid = #{isocbusinessorderdataid,jdbcType=INTEGER}
  </select>
  <select id="findByIsocbusinessorderdatadetailid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select ibo.* from isoc_business_order ibo
    left join isoc_business_order_data ibod on (ibod.relationid = ibo.isocbusinessorderid and ibod.type = 0)
    left join isoc_business_order_data_detail ibodd on ibodd.isocbusinessorderdataid = ibod.isocbusinessorderdataid
    where ibodd.isocbusinessorderdatadetailid = #{isocbusinessorderdatadetailid,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="IsocBusinessOrder" useGeneratedKeys="true" keyProperty="isocbusinessorderid">
    insert into isoc_business_order (isocid, businessid,type,auditstatus)
    values (#{isocid,jdbcType=INTEGER}, #{businessid,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER},#{auditstatus,jdbcType=TINYINT})
  </insert>
</mapper>