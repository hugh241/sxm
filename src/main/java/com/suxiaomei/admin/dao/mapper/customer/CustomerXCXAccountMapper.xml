<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suxiaomei.admin.dao.customer.CustomerXCXAccountMapper">
  <resultMap id="BaseResultMap" type="com.suxiaomei.admin.entity.customer.CustomerXCXAccount">
    <id column="customerxcxaccountid" jdbcType="INTEGER" property="customerxcxaccountid" />
    <result column="xcxaccountid" jdbcType="INTEGER" property="xcxaccountid" />
    <result column="customerid" jdbcType="INTEGER" property="customerid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    customerxcxaccountid, xcxaccountid, customerid, createtime, updatetime, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_xcx_account
    where customerxcxaccountid = #{customerxcxaccountid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_xcx_account
    where customerxcxaccountid = #{customerxcxaccountid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.suxiaomei.admin.entity.customer.CustomerXCXAccount">
    insert into customer_xcx_account (customerxcxaccountid, xcxaccountid, 
      customerid, createtime, updatetime, 
      status)
    values (#{customerxcxaccountid,jdbcType=INTEGER}, #{xcxaccountid,jdbcType=INTEGER}, 
      #{customerid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.suxiaomei.admin.entity.customer.CustomerXCXAccount">
    insert into customer_xcx_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerxcxaccountid != null">
        customerxcxaccountid,
      </if>
      <if test="xcxaccountid != null">
        xcxaccountid,
      </if>
      <if test="customerid != null">
        customerid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerxcxaccountid != null">
        #{customerxcxaccountid,jdbcType=INTEGER},
      </if>
      <if test="xcxaccountid != null">
        #{xcxaccountid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suxiaomei.admin.entity.customer.CustomerXCXAccount">
    update customer_xcx_account
    <set>
      <if test="xcxaccountid != null">
        xcxaccountid = #{xcxaccountid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null">
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where customerxcxaccountid = #{customerxcxaccountid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suxiaomei.admin.entity.customer.CustomerXCXAccount">
    update customer_xcx_account
    set xcxaccountid = #{xcxaccountid,jdbcType=INTEGER},
      customerid = #{customerid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where customerxcxaccountid = #{customerxcxaccountid,jdbcType=INTEGER}
  </update>
</mapper>