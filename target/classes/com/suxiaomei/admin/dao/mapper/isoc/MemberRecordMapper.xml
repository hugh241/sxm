<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suxiaomei.admin.dao.isoc.MemberRecordMapper">
  <resultMap id="BaseResultMap" type="com.suxiaomei.admin.entity.isoc.MemberRecord">
    <id column="memberrecordid" jdbcType="INTEGER" property="memberrecordid" />
    <result column="memberid" jdbcType="INTEGER" property="memberid" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    memberrecordid, memberid, result, createtime, updatetime, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_record
    where memberrecordid = #{memberrecordid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member_record
    where memberrecordid = #{memberrecordid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.suxiaomei.admin.entity.isoc.MemberRecord">
    insert into member_record (memberrecordid, memberid, result, 
      createtime, updatetime, status
      )
    values (#{memberrecordid,jdbcType=INTEGER}, #{memberid,jdbcType=INTEGER}, #{result,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suxiaomei.admin.entity.isoc.MemberRecord">
    insert into member_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberrecordid != null">
        memberrecordid,
      </if>
      <if test="memberid != null">
        memberid,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberrecordid != null">
        #{memberrecordid,jdbcType=INTEGER},
      </if>
      <if test="memberid != null">
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suxiaomei.admin.entity.isoc.MemberRecord">
    update member_record
    <set>
      <if test="memberid != null">
        memberid = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where memberrecordid = #{memberrecordid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suxiaomei.admin.entity.isoc.MemberRecord">
    update member_record
    set memberid = #{memberid,jdbcType=INTEGER},
      result = #{result,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where memberrecordid = #{memberrecordid,jdbcType=INTEGER}
  </update>
</mapper>